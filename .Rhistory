knitr::include_graphics("")
setwd("~/Desktop/R/rw ds projects/energy_consumption")
knitr::include_graphics("imagegeneratedbyai.png")
knitr::include_graphics("imagegeneratedbyai.png")
# Load necessary libraries
suppressPackageStartupMessages(library(dplyr))
library(lubridate)
library(ranger)
library(xgboost)
library(ggplot2)
# Load and inspect the training and testing datasets
df_train <- read.csv("df_train.csv")
df_test <- read.csv("df_test.csv")
## Explore the structure of the dataset
glimpse(df_train)
# Start coding here...add as many cells as you like!
unique(df_train$day_in_week)
df_train <- df_train %>% mutate(date = mdy(date))
df_test <- df_test %>% mutate(date = mdy(date))
df_train <- df_train %>% mutate(day_in_week = factor(day_in_week, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
df_test <- df_test %>% mutate(day_in_week = factor(day_in_week, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
glimpse(df_train)
glimpse(df_test)
colSums(is.na(df_train))
colSums(is.na(df_test))
df_train %>%
group_by(year) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = year, y = mean_power_consumption)) +
geom_line()
df_train %>%
group_by(day_in_week) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = day_in_week, y = mean_power_consumption, group = 1)) +
geom_line()
df_train %>%
group_by(month) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = month, y = mean_power_consumption)) +
geom_line() +
scale_x_continuous(breaks = seq(1:12))
exp_vars <- setdiff(names(df_train), c("date", "power_consumption"))
exp_vars
fmla <- paste("power_consumption", paste(exp_vars, collapse = "+"), sep = "~")
print(fmla)
df_train_ohe <- model.matrix(power_consumption ~ . -1, data = df_train)
head(df_train_ohe)
df_train_ohe_label <- df_train$power_consumption
df_test_ohe <- model.matrix(power_consumption ~ . -1, data = df_test)
head(df_test_ohe)
df_test_ohe_label <- df_test$power_consumption
df_train_ohe_dmat <- xgb.DMatrix(data = df_train_ohe, label = df_train_ohe_label)
df_test_ohe_dmat <- xgb.DMatrix(data = df_test_ohe, label = df_test_ohe_label)
rf_model <- ranger(fmla, data = df_train, num.trees = 500)
xgb_model <- xgb.train(data = df_train_ohe_dmat,
objective = "reg:squarederror",
nrounds = 500,
eval_metric = "rmse")
df_test <- df_test %>% mutate(
power_consumption_pred_rf = predict(rf_model, data = df_test)$predictions,
power_consumption_pred_xgb = predict(xgb_model, newdata = df_test_ohe_dmat))
glimpse(df_test)
rmse_rf <- caret::RMSE(df_test$power_consumption, df_test$power_consumption_pred_rf)
rmse_xgb <- caret::RMSE(df_test$power_consumption, df_test$power_consumption_pred_xgb)
print(rmse_rf)
print(rmse_xgb)
selected_rmse <- rmse_rf
print(selected_rmse)
df_test %>% group_by(day_in_week) %>% summarize(
mean_daily_power_consumption = mean(power_consumption, na.rm = TRUE),
mean_daily_power_consumption_rf = mean(power_consumption_pred_rf, na.rm = TRUE),
mean_daily_power_consumption_xgb = mean(power_consumption_pred_xgb, na.rm = TRUE),
.groups = "drop") %>%
tidyr::pivot_longer(cols = starts_with("mean_"), names_to = "type_of_value", values_to = "value") %>%
ggplot(aes(x = day_in_week, y = value, group = type_of_value, color = type_of_value)) + geom_line()
trend_similarity <- as.character("Yes")
knitr::include_graphics("imagegeneratedbyai.png")
# Load necessary libraries
suppressPackageStartupMessages(library(dplyr))
library(lubridate)
library(ranger)
library(xgboost)
library(ggplot2)
# Load and inspect the training and testing datasets
df_train <- read.csv("df_train.csv")
df_test <- read.csv("df_test.csv")
## Explore the structure of the dataset
glimpse(df_train)
# Start coding here...add as many cells as you like!
unique(df_train$day_in_week)
df_train <- df_train %>% mutate(date = mdy(date))
df_test <- df_test %>% mutate(date = mdy(date))
df_train <- df_train %>% mutate(day_in_week = factor(day_in_week, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
df_test <- df_test %>% mutate(day_in_week = factor(day_in_week, levels = c("Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun")))
glimpse(df_train)
glimpse(df_test)
colSums(is.na(df_train))
colSums(is.na(df_test))
df_train %>%
group_by(year) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = year, y = mean_power_consumption)) +
geom_line()
df_train %>%
group_by(day_in_week) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = day_in_week, y = mean_power_consumption, group = 1)) +
geom_line()
df_train %>%
group_by(month) %>%
summarize(mean_power_consumption = mean(power_consumption, na.rm = TRUE), .groups = "drop") %>%
ggplot(aes(x = month, y = mean_power_consumption)) +
geom_line() +
scale_x_continuous(breaks = seq(1:12))
exp_vars <- setdiff(names(df_train), c("date", "power_consumption"))
exp_vars
fmla <- paste("power_consumption", paste(exp_vars, collapse = "+"), sep = "~")
print(fmla)
df_train_ohe <- model.matrix(power_consumption ~ . -1, data = df_train)
head(df_train_ohe)
df_train_ohe_label <- df_train$power_consumption
df_test_ohe <- model.matrix(power_consumption ~ . -1, data = df_test)
head(df_test_ohe)
df_test_ohe_label <- df_test$power_consumption
df_train_ohe_dmat <- xgb.DMatrix(data = df_train_ohe, label = df_train_ohe_label)
df_test_ohe_dmat <- xgb.DMatrix(data = df_test_ohe, label = df_test_ohe_label)
rf_model <- ranger(fmla, data = df_train, num.trees = 500)
xgb_model <- xgb.train(data = df_train_ohe_dmat,
objective = "reg:squarederror",
nrounds = 500,
eval_metric = "rmse")
df_test <- df_test %>% mutate(
power_consumption_pred_rf = predict(rf_model, data = df_test)$predictions,
power_consumption_pred_xgb = predict(xgb_model, newdata = df_test_ohe_dmat))
glimpse(df_test)
rmse_rf <- caret::RMSE(df_test$power_consumption, df_test$power_consumption_pred_rf)
rmse_xgb <- caret::RMSE(df_test$power_consumption, df_test$power_consumption_pred_xgb)
print(rmse_rf)
print(rmse_xgb)
selected_rmse <- rmse_rf
print(selected_rmse)
df_test %>% group_by(day_in_week) %>% summarize(
mean_daily_power_consumption = mean(power_consumption, na.rm = TRUE),
mean_daily_power_consumption_rf = mean(power_consumption_pred_rf, na.rm = TRUE),
mean_daily_power_consumption_xgb = mean(power_consumption_pred_xgb, na.rm = TRUE),
.groups = "drop") %>%
tidyr::pivot_longer(cols = starts_with("mean_"), names_to = "type_of_value", values_to = "value") %>%
ggplot(aes(x = day_in_week, y = value, group = type_of_value, color = type_of_value)) + geom_line()
trend_similarity <- as.character("Yes")
